package {{package}}

{{#imports}}import {{import}}
{{/imports}}

import cn.leancloud.AVCloud
import cn.leancloud.AVException
import cn.leancloud.AVFile
import cn.leancloud.EngineFunction
import cn.leancloud.EngineFunctionParam
import kotlinx.coroutines.rx2.awaitLast

open class {{classname}} {
{{#operations}}
  {{#operation}}
  {{#vendorExtensions.x-function}}
    /**
     * {{{summary}}}
    {{#queryParams}}
     * @param {{{paramName}}} {{{description}}}
    {{/queryParams}}
     */
    suspend fun {{vendorExtensions.x-function}}({{#queryParams}}{{paramName}}: {{{dataType}}}, {{/queryParams}}): {{>api_return_type}} {
        val params = mutableMapOf<String, Any>(
        {{#queryParams}}
            Pair("{{paramName}}", {{paramName}}),
        {{/queryParams}}
        )
        try {
            return {{#returnTypeIsPrimitive}}AVCloud.callFunctionInBackground{{/returnTypeIsPrimitive}}{{^returnTypeIsPrimitive}}AVCloud.callRPCInBackground{{/returnTypeIsPrimitive}}<{{{returnType}}}>("{{vendorExtensions.x-function}}", params).awaitLast()
        } catch (e: Throwable) {
            throw AVException("Call to {{vendorExtensions.x-function}} failed", e)
        }
    }

  {{/vendorExtensions.x-function}}
  {{/operation}}
{{/operations}}
{{#operations}}
  {{#operation}}
  {{#vendorExtensions.x-function}}
    open fun {{vendorExtensions.x-function}}Impl({{#queryParams}}{{paramName}}: {{{dataType}}}, {{/queryParams}}): {{>api_return_type}} {
        TODO("Not implemented")
    }

  {{/vendorExtensions.x-function}}
  {{/operation}}
{{/operations}}
}

object {{classname}}Function {
{{#operations}}
    lateinit var impl: {{classname}}

    {{#operation}}
    {{#vendorExtensions.x-function}}
    @JvmStatic
    @EngineFunction("{{vendorExtensions.x-function}}")
    fun {{vendorExtensions.x-function}}({{#queryParams}}@EngineFunctionParam("{{paramName}}") {{paramName}}: {{{dataType}}}, {{/queryParams}}): {{>api_return_type}} {
        return impl.{{vendorExtensions.x-function}}Impl({{#queryParams}}{{paramName}},{{/queryParams}})
    }

    {{/vendorExtensions.x-function}}
    {{/operation}}
{{/operations}}
}
